echo ==============================================================================
echo                INSTALLING MARKLOGIC MASTER
echo ==============================================================================

echo Installing MarkLogic rpm
sudo yum -y --nogpgcheck install lsb gdb
mkdir -p ~/marklogic_install/
curl -o ~/marklogic_install/${driver.downloadFilename} https://s3.amazonaws.com/brooklyn-marklogic/${driver.downloadFilename}
sudo -E -n -S -- rpm -i ~/marklogic_install/${driver.downloadFilename}
echo Finished Installing the MarkLogic rpm

sudo -E -n -S -- sed -i 's/MARKLOGIC_EC2_HOST=1/MARKLOGIC_EC2_HOST=0/' /etc/sysconfig/MarkLogic

pushd .

mkdir -p ~/marklogic_install/config
cd ~/marklogic_install/config

array=( join-cluster.xqy qa-restart.xqy transfer-cluster-config.xqy )
for i in ${r"${array[@]}"}
do
    curl -o $i https://s3.amazonaws.com/brooklyn-marklogic/config/$i
done

echo Copying xqy files
sudo -E -n -S -- cp join-cluster.xqy \
                     qa-restart.xqy \
                     transfer-cluster-config.xqy \
                     /opt/MarkLogic/Admin

sudo -E -n -S -- mkdir /var/opt/xqy

mkdir -p ~/marklogic_install/config/xqy
cd ~/marklogic_install/config/xqy

array=( bookmark.xqy delete.xqy search-debug.xqy search.xqy update.xqy verify.xqy view.xqy )
for i in ${r"${array[@]}"}
do
    curl -o $i https://s3.amazonaws.com/brooklyn-marklogic/config/$i
done
cd ~/marklogic_install/config

sudo -E -n -S -- cp xqy/bookmark.xqy \
                    xqy/delete.xqy \
                    xqy/search-debug.xqy \
                    xqy/search.xqy \
                    xqy/update.xqy \
                    xqy/verify.xqy \
                    xqy/view.xqy \
                    /var/opt/xqy

array=( get_db_id.xqy stats.xqy http-server-status.xqy get-hosts.xqy attach_replica.xqy detach_replica.xqy
create_markmail_forests.xqy create_forests.xqy create_forests_with_fastdir.xqy create_s3_forests.xqy
create_s3_forests_with_fastdir.xqy create_s3_replica_forests.xqy create_s3_replica_forests_with_fastdir.xqy
create_replica_forests.xqy create_replica_forests_with_fastdir.xqy create_markmail_appserver.xqy
create_markmail_database.xqy attach_markmail_forests.xqy create_httpserver.xqy create_role.xqy rewrite-hostname.xqy
rewrite-assignments.xqy transfer-cluster-config.xqy set_metering_on.xqy )
for i in ${r"${array[@]}"}
do
    curl -o $i https://s3.amazonaws.com/brooklyn-marklogic/config/$i
done

sudo -E -n -S -- cp get_db_id.xqy \
                    stats.xqy \
                    http-server-status.xqy \
                    get-hosts.xqy \
                    attach_replica.xqy \
                    detach_replica.xqy \
                    create_markmail_forests.xqy \
                    create_forests.xqy \
                    create_forests_with_fastdir.xqy \
                    create_s3_forests.xqy \
                    create_s3_forests_with_fastdir.xqy \
                    create_s3_replica_forests.xqy \
                    create_s3_replica_forests_with_fastdir.xqy \
                    create_replica_forests.xqy \
                    create_replica_forests_with_fastdir.xqy \
                    create_markmail_appserver.xqy \
                    create_markmail_database.xqy \
                    attach_markmail_forests.xqy \
                    create_httpserver.xqy \
                    create_role.xqy \
                    rewrite-hostname.xqy \
                    rewrite-assignments.xqy \
                    transfer-cluster-config.xqy \
                    set_metering_on.xqy \
                    /opt/MarkLogic/Admin
echo Finished copying xqy files


array=( reset_ml_on_startup )
for i in ${r"${array[@]}"}
do
    curl -o $i https://s3.amazonaws.com/brooklyn-marklogic/config/$i
done

export MARKLOGIC_AWS_ACCESS_KEY=${driver.awsAccessKey}
export MARKLOGIC_AWS_SECRET_KEY=${driver.awsSecretKey}
export MARKLOGIC_AUTO_SCALE_GROUP=${driver.cluster}
chmod +x ./reset_ml_on_startup
sudo -E -n -S -- ./reset_ml_on_startup

popd

echo Starting MarkLogic
sudo -E -n -S -- /etc/init.d/MarkLogic start
#we are going to wait till we can connect over http
#todo: we need a smarter way to wait till a service is available. The code below is not working. so currently doing a dumb sleep
#echo Waiting till MarkLogic is available over http
#curl --retry 60 --retry-delay 1 'http://localhost:8001'
sleep 30
echo Finished Starting MarkLogic

echo Installing new license
curl  'http://localhost:8001/license-go.xqy?license-key=${driver.licenseKey}&licensee=${driver.licensee}&ok'
sleep 2
echo Finished installing new license

echo Accepting agreement
curl 'http://localhost:8001/agree-go.xqy?accepted-agreement=development'
sleep 2
echo Finished accepting agreement

echo initialize-go.xqy
curl 'http://localhost:8001/initialize-go.xqy'
sleep 2

echo Restarting MarkLogic
curl 'http://localhost:8001/qa-restart.xqy'
#todo: better mechanism needed to wait till service is available again
sleep 60
echo Finished restarting MarkLogic

echo Setting new credentials
curl 'http://localhost:8001/security-install-go.xqy?auto=true&user=${driver.user}&password1=${driver.password}&password2=${driver.password}&realm=public'
sleep 2
echo Finished setting new credentials

echo credentials-admin-go
curl --digest -u ${driver.user}:${driver.password} \
   'http://localhost:8001/credentials-admin-go.xqy?/sec:credentials/sec:aws-access-key=${driver.awsAccessKey}&/sec:credentials/sec:aws-secret-key=${driver.awsSecretKey}'
sleep 2

echo Restarting MarkLogic
curl --digest -u ${driver.user}:${driver.password} 'http://localhost:8001/qa-restart.xqy'
#todo: better mechanism needed to wait till service is available again
sleep 30
echo Finished restarting MarkLogic

echo Creating Markmail database
curl --digest -u ${driver.user}:${driver.password} http://localhost:8001/create_markmail_database.xqy
echo Finished creating MarkMail database

echo Creating MarkMail forrest
curl --digest -u ${driver.user}:${driver.password} 'http://localhost:8001/create_markmail_forests.xqy?datadir=/var/opt/mldata&fcount=4&host=${driver.hostname}&node=node1&cluster=${driver.cluster}'
echo Finished creating MarkMail forrest

echo Attaching MarkMail forrest
curl --digest -u ${driver.user}:${driver.password} 'http://localhost:8001/attach_markmail_forests.xqy?fcount=${driver.fcount}&host=${driver.hostname}&node=node1&cluster=${driver.cluster}'
echo Finished attaching MarkMail forrest

echo Creating role
curl --digest -u ${driver.user}:${driver.password} 'http://localhost:8001/create_role.xqy'
echo Finished creating role

echo Creating MarkMail appserver
curl --digest -u ${driver.user}:${driver.password} 'http://localhost:8001/create_markmail_appserver.xqy'
echo Finished creating MarkMail appserver

echo Setting metering on
curl --digest -u ${driver.user}:${driver.password} 'http://localhost:8001/set_metering_on.xqy'
echo Finished setting metering on

echo ==============================================================================
echo                FINISHED INSTALLING MARKLOGIC MASTER
echo ==============================================================================