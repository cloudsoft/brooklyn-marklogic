set -x
# Get the launch config variables

node_name=$1
if [ "$node_name" == "" ]
then
	echo "Must give node name"
        exit
fi


/opt/aws/bin/ec2-metadata -d | awk '{for (i=2;i<=NF;i++){if ($i == "export"){printf "\n%s ",$i}else {printf "%s",$i}}}' > setup
source setup
export HOME=/root

sdb_bucket_name=`echo $MARKLOGIC_AUTO_SCALE_GROUP | sed 's/--/__/' | sed 's/--/__/' | sed 's/-/_/'`
sdb_cluster_name=`echo $MARKLOGIC_AUTO_SCALE_GROUP | sed 's/--/__/' | sed 's/...$//'`


instance_id=`/opt/aws/bin/ec2-metadata -i | awk '{print $2}'`
region=`/opt/aws/bin/ec2-metadata -z | awk '{print $2}'`
instance_name=`wget -q -O - http://169.254.169.254/latest/meta-data/public-hostname`
instance_type=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-type`


# Extract our meta data from simple db
# Is the storage EBS or Ephemeral
storage=`./simpledb get $sdb_bucket_name meta storage | awk 'BEGIN{FS="="}{print $2}'`
backup=`./simpledb get $sdb_bucket_name meta backup | awk 'BEGIN{FS="="}{print $2}'`
fastdir=`./simpledb get $sdb_bucket_name meta fastdir | awk 'BEGIN{FS="="}{print $2}'`
replica=`./simpledb get $sdb_bucket_name meta replica | awk 'BEGIN{FS="="}{print $2}'`


# Are we using provisioned IOPs
iops=`./simpledb get $sdb_bucket_name meta iops | awk 'BEGIN{FS="="}{print $2}'`

# How many mounts per node
default_mount_points=`./simpledb get $sdb_bucket_name meta default_mount_points | awk 'BEGIN{FS="="}{print $2}'`
if [ "$default_mount_points" == "" ]
then
    default_mount_points=8
fi


/etc/init.d/MarkLogic stop

        # Detach an EBS volume for backup
        i=105

        if [ "$backup" == "ebs" ]
        then
           hex_representation=$( printf "%X" ${i} )

           fdev=`printf "sd\x$hex_representation\n"`
           backup_volume_name=`./simpledb get $sdb_bucket_name $node_name backup_volume | awk ' BEGIN{FS="="}{print $2} '`
           umount /var/opt/backup
              /opt/aws/bin/ec2-detach-volume  $backup_volume_name -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  -i $instance_id -d /dev/$fdev -f
              detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $backup_volume_name | awk '{print $5}'` 
              while [ "$detached" != "available" ]
              do
                 sleep 10
                 detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $backup_volume_name | awk '{print $5}'` 
              done
        else
           if [ "$backup" == "s3" ]
           then
              /home/ec2-user/s3cmd-1.1.0-beta3/s3cmd rb --force s3://marklogic-$sdb_cluster_name-$sdb_bucket_name-backup
           fi
        fi

        mount_points=`./simpledb get $sdb_bucket_name $node_name mount_points | awk 'BEGIN{FS="="}{print $2}'`

        if [ "$mount_points" == "" ]
        then
           mount_points=$default_mount_points
        fi


        i=106
        # Detach mount volumes
        vol_count=1
        while [ $vol_count -le $mount_points ]
        do
         if [ "$storage" == "ebs" ]
         then
           hex_representation=$( printf "%X" ${i} )

           dev=`printf "sd\x$hex_representation\n"`
           umount /var/opt/mldata/$sdb_bucket_name-$node_name-$vol_count
           volume_name=`./simpledb get $sdb_bucket_name $node_name volume_$vol_count | awk 'BEGIN{FS="="}{print $2}'`
           if [ "$volume_name" != "" ]
           then
              /opt/aws/bin/ec2-detach-volume  $volume_name -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  -i $instance_id -d /dev/$dev -f
              detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
              while [ "$detached" != "available" ]
              do
                 sleep 10
                 detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
              done
          fi
         else
           if [ "$storage" == "s3" ] && [ $vol_count -eq 1 ]
           then
              /home/ec2-user/s3cmd-1.1.0-beta3/s3cmd rb --force s3://marklogic-$sdb_cluster_name-$sdb_bucket_name-data
           fi

         fi

          vol_count=$(expr $vol_count + 1)
          i=$(expr $i + 1)
        done
        vol_count=1
        while [ $vol_count -le $mount_points ]
        do
          if [ "$fastdir" == "ebs" ]
          then
           hex_representation=$( printf "%X" ${i} )

           dev=`printf "sd\x$hex_representation\n"`
           umount /var/opt/mldata/$sdb_bucket_name-$node_name-fastdir-$vol_count
           volume_name=`./simpledb get $sdb_bucket_name $node_name fastdir_volume_$vol_count | awk 'BEGIN{FS="="}{print $2}'`
           if [ "$volume_name" != "" ]
           then
              /opt/aws/bin/ec2-detach-volume  $volume_name -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  -i $instance_id -d /dev/$dev -f
              detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
              while [ "$detached" != "available" ]
              do
                 sleep 10
                 detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
              done
          fi
         fi

          vol_count=$(expr $vol_count + 1)
          i=$(expr $i + 1)
        done
        vol_count=1
        while [ $vol_count -le $mount_points ]
        do
          if [ "$replica" == "ebs" ]
          then
           hex_representation=$( printf "%X" ${i} )

           dev=`printf "sd\x$hex_representation\n"`
           umount /var/opt/mldata/$sdb_bucket_name-$node_name-replica-$vol_count
           volume_name=`./simpledb get $sdb_bucket_name $node_name replica_volume_$vol_count | awk 'BEGIN{FS="="}{print $2}'`
           if [ "$volume_name" != "" ]
           then
              /opt/aws/bin/ec2-detach-volume  $volume_name -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  -i $instance_id -d /dev/$dev -f
              detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
              while [ "$detached" != "available" ]
              do
                 sleep 10
                 detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
              done
          fi
         else
           if [ "$replica" == "s3" ] && [ $vol_count -eq 1 ]
           then
              /home/ec2-user/s3cmd-1.1.0-beta3/s3cmd rb --force s3://marklogic-$sdb_cluster_name-$sdb_bucket_name-replica
           fi

         fi

          vol_count=$(expr $vol_count + 1)
          i=$(expr $i + 1)
        done

umount /var/opt

i=0
character=$(expr $i + 68)
dev=`printf "sd\x$character"`

volume_name=`./simpledb get $sdb_bucket_name $node_name volume_name | awk 'BEGIN{FS="="}{print $2}'`

/opt/aws/bin/ec2-detach-volume  $volume_name -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  -i $instance_id -d /dev/$dev -f
detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
while [ "$detached" != "available" ]
do
   sleep 10
   detached=`ec2-describe-volumes  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX  | grep VOLUME | grep $volume_name | awk '{print $5}'` 
done
