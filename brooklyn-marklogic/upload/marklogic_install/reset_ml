set -x 


 mkdir /space/mldata
 mkdir /space/xqy
 chmod 777  /space/mldata
 chmod 777  /space/xqy


# Get the launch config variables

/opt/aws/bin/ec2-metadata -d | awk '{for (i=2;i<=NF;i++){if ($i == "export"){printf "\n%s ",$i}else {printf "%s",$i}}}' > setup
source ./setup

env


if [ "$MARKLOGIC_DOWNLOAD_URI" == "none" ]
then
  this_rpm=MarkLogic-6.0-20130110.x86_64.rpm
else

  this_rpm=`basename $MARKLOGIC_DOWNLOAD_URI`

fi

sudo chmod 777 /space
/etc/init.d/MarkLogic stop
rpm -e MarkLogic
rm -rf /opt/MarkLogic /var/opt/MarkLogic /space/mldata/*
rpm -i $this_rpm

sed -i 's/MARKLOGIC_EC2_HOST=1/MARKLOGIC_EC2_HOST=0/' /etc/sysconfig/MarkLogic

/etc/init.d/MarkLogic start
cp join-cluster.xqy qa-restart.xqy transfer-cluster-config.xqy /opt/MarkLogic/Admin
cp xqy/bookmark.xqy xqy/delete.xqy xqy/search-debug.xqy xqy/search.xqy	xqy/update.xqy xqy/verify.xqy xqy/view.xqy /space/xqy

cp get_db_id.xqy stats.xqy http-server-status.xqy get-hosts.xqy create_forests.xqy create_database.xqy attach_forests.xqy create_appserver.xqy create_httpserver.xqy create_role.xqy /opt/MarkLogic/Admin
ec2_name=`wget -q -O - http://169.254.169.254/latest/meta-data/public-hostname`
echo $ec2_name > hosts.txt
cluster_owner=`./get_youngest`

python clusterInit.py -n hosts.txt -u ec2-user -l license.txt  > init_ml
chmod 777 init_ml
./init_ml

if [ "$ec2_name" == "$cluster_owner" ]
then

python clusterBuild.py -n hosts.txt -u ec2-user -l license.txt  > init_ml

else
python clusterJoin.py -n hosts.txt -u ec2-user -l license.txt -c $cluster_owner > init_ml

fi
chmod 777 init_ml


instance_id=`/opt/aws/bin/ec2-metadata -i | awk '{print $2}'`

sleep 10

if [ "$ec2_name" == "$cluster_owner" ]
then


/opt/aws/bin/ec2addtag  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX $instance_id --tag ML=Master

./init_ml

python clusterEnd.py -n hosts.txt -u ec2-user -l license.txt  > init_ml
chmod 777 init_ml
./init_ml



sleep 30
curl --digest -u admin:admin http://localhost:8001/create_database.xqy
date
date
curl --digest -u admin:admin http://localhost:8001/create_forests.xqy?datadir=/space/mldata\&fcount=8\&host=$ec2_name
date
curl --digest -u admin:admin http://localhost:8001/attach_forests.xqy?host=$ec2_name
sleep 10
date
curl --digest -u admin:admin http://localhost:8001/create_role.xqy
sleep 10



# Let slaves in
rm /home/ec2-user/startup.lock

date
curl --digest -u admin:admin http://localhost:8001/create_httpserver.xqy
sleep  10
date
curl --digest -u admin:admin http://localhost:8001/create_appserver.xqy
date

else
/opt/aws/bin/ec2addtag  -O AKIAJFEVG7RSZONJC57Q  -W Ar13VsmVJkXVNYySc/heDES4ac4+efrMcfiSqhTX $instance_id --tag ML=Slave

echo "Waiting"
ssh -i /home/ec2-user/ml_demo.pem -o LogLevel=quiet -o StrictHostKeyChecking=no  ec2-user@$cluster_owner "lockfile startup.lock"
./init_ml
ssh -i /home/ec2-user/ml_demo.pem -o LogLevel=quiet -o StrictHostKeyChecking=no  ec2-user@$cluster_owner "rm startup.lock"
sleep 10


ssh -i /home/ec2-user/ml_demo.pem -o LogLevel=quiet -o StrictHostKeyChecking=no  ec2-user@$cluster_owner "lockfile create.lock"
curl --trace-ascii -  --digest -u admin:admin http://$cluster_owner:8001/create_forests.xqy?datadir=/space/mldata\&fcount=8\&host=$ec2_name
ssh -i /home/ec2-user/ml_demo.pem -o LogLevel=quiet -o StrictHostKeyChecking=no  ec2-user@$cluster_owner "rm create.lock"
sleep 10


ssh -i /home/ec2-user/ml_demo.pem -o LogLevel=quiet -o StrictHostKeyChecking=no  ec2-user@$cluster_owner "lockfile attach.lock"
curl --trace-ascii -  --digest -u admin:admin http://$cluster_owner:8001/attach_forests.xqy?host=$ec2_name
ssh -i /home/ec2-user/ml_demo.pem -o LogLevel=quiet -o StrictHostKeyChecking=no  ec2-user@$cluster_owner "rm attach.lock"
sleep 10



echo "Finished"



python clusterEnd.py -n hosts.txt -u ec2-user -l license.txt  > init_ml
chmod 777 init_ml
./init_ml
fi

